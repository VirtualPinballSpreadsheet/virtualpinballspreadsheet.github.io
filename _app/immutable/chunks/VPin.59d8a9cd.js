import{w,r as _}from"./index.71b23ac7.js";import{$ as c}from"./scheduler.6b4a5b57.js";import"./index.093f3364.js";const p={};function F(e){return e==="local"?localStorage:sessionStorage}function l(e,s,t){const a=(t==null?void 0:t.serializer)??JSON,r=(t==null?void 0:t.storage)??"local";function i(d,m){F(r).setItem(d,a.stringify(m))}if(!p[e]){const d=w(s,o=>{const n=F(r).getItem(e);n&&o(a.parse(n));{const h=g=>{g.key===e&&o(g.newValue?a.parse(g.newValue):null)};return window.addEventListener("storage",h),()=>window.removeEventListener("storage",h)}}),{subscribe:m,set:b}=d;p[e]={set(o){i(e,o),b(o)},update(o){const n=o(c(d));i(e,n),b(n)},subscribe:m}}return p[e]}const D=l("modeOsPrefers",!1),U=l("modeUserPrefers",void 0),v=l("modeCurrent",!1);function I(){const e=window.matchMedia("(prefers-color-scheme: light)").matches;return D.set(e),e}function V(e){U.set(e)}function G(e){const s=document.documentElement.classList,t="dark";e===!0?s.remove(t):s.add(t),v.set(e)}function H(){const e=document.documentElement.classList,s=localStorage.getItem("modeUserPrefers")==="false",t=!("modeUserPrefers"in localStorage),a=window.matchMedia("(prefers-color-scheme: dark)").matches;s||t&&a?e.add("dark"):e.remove("dark")}const M="(prefers-reduced-motion: reduce)";function E(){return window.matchMedia(M).matches}const k=_(E(),e=>{{const s=a=>{e(a.matches)},t=window.matchMedia(M);return t.addEventListener("change",s),()=>{t.removeEventListener("change",s)}}});const P="https://virtualpinballspreadsheet.github.io/vps-db/",B=P+"db/vpsdb.json";P+`lastUpdated.json?ts=${new Date().getTime()}`;const z="VirtualPinballSpreadsheet",N="vps-db",$="img/",x="games/",J="staging",u=w({}),S=l("db",{}),f=l("lastUpdatedDb",0),y=async()=>{try{const e=await A();let s,t={};if(e==c(f)){if(Object.keys(c(u)).length>0)return;t=c(S)}else s=await(await fetch(B)).json(),s.forEach(r=>{const i=r.id;t[i]=r}),S.set(t);f.set(e),u.set(t)}catch(e){console.log(e)}},L=e=>{var a,r;const t=c(u)[e];if(t){if(t.imgUrl)return t.imgUrl;if((a=t.b2sFiles)!=null&&a.length&&t.b2sFiles[0].imgUrl)return t.b2sFiles[0].imgUrl;if((r=t.tableFiles)!=null&&r.length&&t.tableFiles[0].imgUrl)return t.tableFiles[0].imgUrl}},A=async()=>{try{const t=(await(await fetch("https://api.github.com/repos/VirtualPinballSpreadsheet/vps-db/commits?path=db/vpsdb.json&per_page=1")).json())[0].commit.author.date;return new Date(t).getTime()}catch{return 0}},Q={fetchDb:y,getGameImage:L,lastUpdated:f,dbStore:u},K=["tableFiles","povFiles","b2sFiles","romFiles","altColorFiles","altSoundFiles","pupPackFiles","wheelArtFiles","topperFiles","mediaPackFiles","soundFiles","ruleFiles"],O=["Hybrid","VR","FSS","4k","MOD","FastFlips","SSF","P-ROC","FlexDMD","Music","incl. B2S","incl. ROM","incl. Art","incl. PuP","incl. Video","no ROM","Kids","Adult","nFozzy","Fleep","LUT","Scorbit"],T=["2Screens","3Screens","FullDMD","incl. Table"],W=O.map(e=>({label:e,value:e})),X=T.map(e=>({label:e,value:e})),q={id:"",authors:[],tableFormat:"VPX",urls:[],updatedAt:0},Y={id:"",updatedAt:0,manufacturer:"",name:"???",year:0},Z={authors:[],id:"",updatedAt:0,urls:[]},ee={authors:[],id:"",updatedAt:0,urls:[]};export{X as B,z as D,Z as E,W as T,G as a,V as b,N as c,Q as d,J as e,$ as f,I as g,x as h,q as i,Y as j,ee as k,l,v as m,K as n,k as p,H as s};
